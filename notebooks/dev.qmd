---
title: "database"
format:
  html:
    code-fold: true
jupyter: python3
---

```{python}
from sympy import *
```

```{python}
m,x,y = symbols('m x y')
d = Matrix([[1/sqrt(1+m**2)], [m/sqrt(1+m**2)]])
n = Matrix([[m/sqrt(1+m**2)], [-1/sqrt(1+m**2)]])
I = Matrix([[1, 0], [0, 1]])
R = I - 2*n*n.T
R
```

```{python}
v = Matrix([[x], [y]])
n = Matrix([[m], [-1]])
proj = v*n.T/(n*n.T)*n.T
proj
```

```{python}
G = Matrix([[1,1,0,1],[2,2,0,2],[1,1,0,1],[1,1,0,1]])
G.rank()
```

```{python}
F = Matrix([[1,2,1],[1,0,1],[1,1,1]])
F.inv()
```

```{python}
F = Matrix([[2,-2,-1,6,-2,1],[1,-1,1,2,-1,2],[4,-4,5,7,-1,6]])
F.rref
()
```

```{python}
a_1, a_2, a_3, b_1, b_2, b_3, c_1, c_2, c_3 = symbols('a_1 a_2 a_3 b_1 b_2 b_3 c_1 c_2 c_3')
M = Matrix([[a_1, a_2, a_3], [b_1, b_2, b_3], [c_1, c_2, c_3]])
F = Matrix([[0,1,1],[1,0,1],[1,1,0]])
M.det()
```

```{python}
H = Matrix([[1, -1, 2, -1], [-3, 4, 1, -1], [2, -5, -3, 8], [-2, 6, -4, 1]])
H.det()
```


```{python}
v = [-4,8,0]
m = [[1,-1,4], [-8,3,1], [2,1,1]]
m_1 = [[-4,-1,4], [8,3,1], [0,1,1]]
m_2 =[[1,-4,4], [-8,8,1], [2,0,1]]
m_3 = [[1,-1,-4], [-8,3,8], [2,1,0]]
B = Matrix(m)
B
```
```